{"Filepath":"config.go","Functions":[{"Uniquefunname":"func (c *Config) check() error","Funname":"check","Returntype":"error","Args":""},{"Uniquefunname":"func loadConfig(filename string, c *Config) error","Funname":"loadConfig","Returntype":"error","Args":"filename string, c *Config"},{"Uniquefunname":"func (c *Config) check() error","Funname":"main.Config.check","Returntype":"error","Args":""},{"Uniquefunname":"func (c *Config) save(filename string) error","Funname":"main.Config.save","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func loadConfig(filename string, c *Config) error","Funname":"main.loadConfig","Returntype":"error","Args":"filename string, c *Config"},{"Uniquefunname":"func (c *Config) save(filename string) error","Funname":"save","Returntype":"error","Args":"filename string"}],"Records":[{"Name":"struct:main.Config","Fields":["main.Config.Backup string","main.Config.Current string","main.Config.Time *time.Time","main.Config.Version string"]}]}
{"Filepath":"main.go","Functions":[{"Uniquefunname":"func backup(cfg *Config, envVars []string) error","Funname":"backup","Returntype":"error","Args":"cfg *Config, envVars []string"},{"Uniquefunname":"func backupKernel() (kFiles *kernelFiles, err error)","Funname":"backupKernel","Returntype":"(kFiles *kernelFiles, err error)","Args":""},{"Uniquefunname":"func findKernelFiles(release, machine string) (*kernelFiles, error)","Funname":"findKernelFiles","Returntype":"(*kernelFiles, error)","Args":"release, machine string"},{"Uniquefunname":"func findKernelFilesAux(release, machine string, files strv.Strv) (*kernelFiles, error)","Funname":"findKernelFilesAux","Returntype":"(*kernelFiles, error)","Args":"release, machine string, files strv.Strv"},{"Uniquefunname":"func fixBackup() error","Funname":"fixBackup","Returntype":"error","Args":""},{"Uniquefunname":"func getGenKernelArch(machine string) string","Funname":"getGenKernelArch","Returntype":"string","Args":"machine string"},{"Uniquefunname":"func getKernelReleaseWithBootOption(options string) string","Funname":"getKernelReleaseWithBootOption","Returntype":"string","Args":"options string"},{"Uniquefunname":"func getLocaleEnvVarsWithSender(service *dbusutil.Service, sender dbus.Sender)([]string, error)","Funname":"getLocaleEnvVarsWithSender","Returntype":"([]string, error)","Args":"service *dbusutil.Service, sender dbus.Sender"},{"Uniquefunname":"func getRollBackMenuText(osDesc string, backupTime time.Time, envVars []string)(string, error)","Funname":"getRollBackMenuText","Returntype":"(string, error)","Args":"osDesc string, backupTime time.Time, envVars []string"},{"Uniquefunname":"func getRollBackMenuTextSafe(osDesc string, backupTime time.Time, envVars []string) string","Funname":"getRollBackMenuTextSafe","Returntype":"string","Args":"osDesc string, backupTime time.Time, envVars []string"},{"Uniquefunname":"func getRollbackMenuTextForceEn(osDesc string, backupTime time.Time) string","Funname":"getRollbackMenuTextForceEn","Returntype":"string","Args":"osDesc string, backupTime time.Time"},{"Uniquefunname":"func getRootUuid() (string, error)","Funname":"getRootUuid","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func inhibit(what, who, why string) (dbus.UnixFD, error)","Funname":"inhibit","Returntype":"(dbus.UnixFD, error)","Args":"what, who, why string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isBackupDevice(device string) (bool, error)","Funname":"isBackupDevice","Returntype":"(bool, error)","Args":"device string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func backup(cfg *Config, envVars []string) error","Funname":"main.backup","Returntype":"error","Args":"cfg *Config, envVars []string"},{"Uniquefunname":"func backupKernel() (kFiles *kernelFiles, err error)","Funname":"main.backupKernel","Returntype":"(kFiles *kernelFiles, err error)","Args":""},{"Uniquefunname":"func findKernelFiles(release, machine string) (*kernelFiles, error)","Funname":"main.findKernelFiles","Returntype":"(*kernelFiles, error)","Args":"release, machine string"},{"Uniquefunname":"func findKernelFilesAux(release, machine string, files strv.Strv) (*kernelFiles, error)","Funname":"main.findKernelFilesAux","Returntype":"(*kernelFiles, error)","Args":"release, machine string, files strv.Strv"},{"Uniquefunname":"func fixBackup() error","Funname":"main.fixBackup","Returntype":"error","Args":""},{"Uniquefunname":"func getGenKernelArch(machine string) string","Funname":"main.getGenKernelArch","Returntype":"string","Args":"machine string"},{"Uniquefunname":"func getKernelReleaseWithBootOption(options string) string","Funname":"main.getKernelReleaseWithBootOption","Returntype":"string","Args":"options string"},{"Uniquefunname":"func main.getLocaleEnvVarsWithSender(service *dbusutil.Service, sender dbus.Sender)([]string, error)","Funname":"main.getLocaleEnvVarsWithSender","Returntype":"([]string, error)","Args":"service *dbusutil.Service, sender dbus.Sender"},{"Uniquefunname":"func main.getRollBackMenuText(osDesc string, backupTime time.Time, envVars []string)(string, error)","Funname":"main.getRollBackMenuText","Returntype":"(string, error)","Args":"osDesc string, backupTime time.Time, envVars []string"},{"Uniquefunname":"func getRollBackMenuTextSafe(osDesc string, backupTime time.Time, envVars []string) string","Funname":"main.getRollBackMenuTextSafe","Returntype":"string","Args":"osDesc string, backupTime time.Time, envVars []string"},{"Uniquefunname":"func getRollbackMenuTextForceEn(osDesc string, backupTime time.Time) string","Funname":"main.getRollbackMenuTextForceEn","Returntype":"string","Args":"osDesc string, backupTime time.Time"},{"Uniquefunname":"func getRootUuid() (string, error)","Funname":"main.getRootUuid","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func inhibit(what, who, why string) (dbus.UnixFD, error)","Funname":"main.inhibit","Returntype":"(dbus.UnixFD, error)","Args":"what, who, why string"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func isBackupDevice(device string) (bool, error)","Funname":"main.isBackupDevice","Returntype":"(bool, error)","Args":"device string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func modifyFsTab(filename, uuid, device string) error","Funname":"main.modifyFsTab","Returntype":"error","Args":"filename, uuid, device string"},{"Uniquefunname":"func modifyRules(filename, Uuid string) error","Funname":"main.modifyRules","Returntype":"error","Args":"filename, Uuid string"},{"Uniquefunname":"func mountDevice(device, dir string) (fn func(), err error)","Funname":"main.mountDevice","Returntype":"(fn func(), err error)","Args":"device, dir string"},{"Uniquefunname":"func printShHideOs() (exitCode int)","Funname":"main.printShHideOs","Returntype":"(exitCode int)","Args":""},{"Uniquefunname":"func restore(cfg *Config, envVars []string) error","Funname":"main.restore","Returntype":"error","Args":"cfg *Config, envVars []string"},{"Uniquefunname":"func runRsync(excludeFile string) error","Funname":"main.runRsync","Returntype":"error","Args":"excludeFile string"},{"Uniquefunname":"func umountDeleteDir(dir string)","Funname":"main.umountDeleteDir","Returntype":"","Args":"dir string"},{"Uniquefunname":"func main.writeGrubCfgBackup(backupUuid, backupDevice, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string)error","Funname":"main.writeGrubCfgBackup","Returntype":"error","Args":"backupUuid, backupDevice, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string"},{"Uniquefunname":"func main.writeGrubCfgBackupMips(backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time)error","Funname":"main.writeGrubCfgBackupMips","Returntype":"error","Args":"backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time"},{"Uniquefunname":"func main.writeGrubCfgBackupSw(backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string)error","Funname":"main.writeGrubCfgBackupSw","Returntype":"error","Args":"backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string"},{"Uniquefunname":"func main.writeGrubCfgRestore(currentUuid, currentDevice, backupUuid string, envVars []string)error","Funname":"main.writeGrubCfgRestore","Returntype":"error","Args":"currentUuid, currentDevice, backupUuid string, envVars []string"},{"Uniquefunname":"func writeGrubCfgRestoreMips(uuid string) error","Funname":"main.writeGrubCfgRestoreMips","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func writeGrubCfgRestoreSw(uuid string) error","Funname":"main.writeGrubCfgRestoreSw","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func modifyFsTab(filename, uuid, device string) error","Funname":"modifyFsTab","Returntype":"error","Args":"filename, uuid, device string"},{"Uniquefunname":"func modifyRules(filename, Uuid string) error","Funname":"modifyRules","Returntype":"error","Args":"filename, Uuid string"},{"Uniquefunname":"func mountDevice(device, dir string) (fn func(), err error)","Funname":"mountDevice","Returntype":"(fn func(), err error)","Args":"device, dir string"},{"Uniquefunname":"func printShHideOs() (exitCode int)","Funname":"printShHideOs","Returntype":"(exitCode int)","Args":""},{"Uniquefunname":"func restore(cfg *Config, envVars []string) error","Funname":"restore","Returntype":"error","Args":"cfg *Config, envVars []string"},{"Uniquefunname":"func runRsync(excludeFile string) error","Funname":"runRsync","Returntype":"error","Args":"excludeFile string"},{"Uniquefunname":"func umountDeleteDir(dir string)","Funname":"umountDeleteDir","Returntype":"","Args":"dir string"},{"Uniquefunname":"func writeGrubCfgBackup(backupUuid, backupDevice, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string)error","Funname":"writeGrubCfgBackup","Returntype":"error","Args":"backupUuid, backupDevice, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string"},{"Uniquefunname":"func writeGrubCfgBackupMips(backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time)error","Funname":"writeGrubCfgBackupMips","Returntype":"error","Args":"backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time"},{"Uniquefunname":"func writeGrubCfgBackupSw(backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string)error","Funname":"writeGrubCfgBackupSw","Returntype":"error","Args":"backupUuid string, osDesc string, kFiles *kernelFiles, backupTime time.Time, envVars []string"},{"Uniquefunname":"func writeGrubCfgRestore(currentUuid, currentDevice, backupUuid string, envVars []string)error","Funname":"writeGrubCfgRestore","Returntype":"error","Args":"currentUuid, currentDevice, backupUuid string, envVars []string"},{"Uniquefunname":"func writeGrubCfgRestoreMips(uuid string) error","Funname":"writeGrubCfgRestoreMips","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func writeGrubCfgRestoreSw(uuid string) error","Funname":"writeGrubCfgRestoreSw","Returntype":"error","Args":"uuid string"}],"Records":[{"Name":"const:main","Fields":["main.abKernelBackupDir","main.abRecoveryFile","main.abRecoveryGrubCfgFile","main.backupMountPoint","main.backupPartitionMarkFile","main.configFile","main.ddeWelcomeFile","main.grubLinuxBarFile"]},{"Name":"var:main","Fields":["main.globalArch","main.globalBootDir","main.globalGrubCfgFile","main.globalGrubMenuEn","main.globalKernelBackupDir","main.globalNoGrubMkconfig","main.logger","main.options"]},{"Name":"struct:main.kernelFiles","Fields":["main.kernelFiles.initrd string","main.kernelFiles.linux string"]}]}
{"Filepath":"main_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedBackingUp(value bool) error","Funname":"emitPropChangedBackingUp","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedBackupTime(value int64) error","Funname":"emitPropChangedBackupTime","Returntype":"error","Args":"value int64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBackupVersion(value string) error","Funname":"emitPropChangedBackupVersion","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConfigValid(value bool) error","Funname":"emitPropChangedConfigValid","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedRestoring(value bool) error","Funname":"emitPropChangedRestoring","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedBackingUp(value bool) error","Funname":"main.Manager.emitPropChangedBackingUp","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedBackupTime(value int64) error","Funname":"main.Manager.emitPropChangedBackupTime","Returntype":"error","Args":"value int64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBackupVersion(value string) error","Funname":"main.Manager.emitPropChangedBackupVersion","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConfigValid(value bool) error","Funname":"main.Manager.emitPropChangedConfigValid","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedRestoring(value bool) error","Funname":"main.Manager.emitPropChangedRestoring","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBackingUp(value bool) (changed bool)","Funname":"main.Manager.setPropBackingUp","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBackupTime(value int64) (changed bool)","Funname":"main.Manager.setPropBackupTime","Returntype":"(changed bool)","Args":"value int64"},{"Uniquefunname":"func (v *Manager) setPropBackupVersion(value string) (changed bool)","Funname":"main.Manager.setPropBackupVersion","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConfigValid(value bool) (changed bool)","Funname":"main.Manager.setPropConfigValid","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropRestoring(value bool) (changed bool)","Funname":"main.Manager.setPropRestoring","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBackingUp(value bool) (changed bool)","Funname":"setPropBackingUp","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBackupTime(value int64) (changed bool)","Funname":"setPropBackupTime","Returntype":"(changed bool)","Args":"value int64"},{"Uniquefunname":"func (v *Manager) setPropBackupVersion(value string) (changed bool)","Funname":"setPropBackupVersion","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConfigValid(value bool) (changed bool)","Funname":"setPropConfigValid","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropRestoring(value bool) (changed bool)","Funname":"setPropRestoring","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"manager.go","Functions":[{"Uniquefunname":"func (m *Manager) CanBackup() (bool, *dbus.Error)","Funname":"CanBackup","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanRestore() (bool, *dbus.Error)","Funname":"CanRestore","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) StartBackup(sender dbus.Sender) *dbus.Error","Funname":"StartBackup","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) StartRestore(sender dbus.Sender) *dbus.Error","Funname":"StartRestore","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func Tr(text string) string","Funname":"Tr","Returntype":"string","Args":"text string"},{"Uniquefunname":"func (m *Manager) backup(envVars []string) error","Funname":"backup","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) canBackup() (bool, error)","Funname":"canBackup","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) canRestore() (bool, error)","Funname":"canRestore","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) emitSignalJobEnd(kind string, err error)","Funname":"emitSignalJobEnd","Returntype":"","Args":"kind string, err error"},{"Uniquefunname":"func inhibitShutdownDo(why string, fn func() error) error","Funname":"inhibitShutdownDo","Returntype":"error","Args":"why string, fn func() error"},{"Uniquefunname":"func (m *Manager) CanBackup() (bool, *dbus.Error)","Funname":"main.Manager.CanBackup","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanRestore() (bool, *dbus.Error)","Funname":"main.Manager.CanRestore","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) StartBackup(sender dbus.Sender) *dbus.Error","Funname":"main.Manager.StartBackup","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) StartRestore(sender dbus.Sender) *dbus.Error","Funname":"main.Manager.StartRestore","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) backup(envVars []string) error","Funname":"main.Manager.backup","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) canBackup() (bool, error)","Funname":"main.Manager.canBackup","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"main.Manager.canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) canRestore() (bool, error)","Funname":"main.Manager.canRestore","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) emitSignalJobEnd(kind string, err error)","Funname":"main.Manager.emitSignalJobEnd","Returntype":"","Args":"kind string, err error"},{"Uniquefunname":"func (m *Manager) restore(envVars []string) error","Funname":"main.Manager.restore","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) startBackup(envVars []string) error","Funname":"main.Manager.startBackup","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) startRestore(envVars []string) error","Funname":"main.Manager.startRestore","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func Tr(text string) string","Funname":"main.Tr","Returntype":"string","Args":"text string"},{"Uniquefunname":"func inhibitShutdownDo(why string, fn func() error) error","Funname":"main.inhibitShutdownDo","Returntype":"error","Args":"why string, fn func() error"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"main.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) restore(envVars []string) error","Funname":"restore","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) startBackup(envVars []string) error","Funname":"startBackup","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func (m *Manager) startRestore(envVars []string) error","Funname":"startRestore","Returntype":"error","Args":"envVars []string"}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.BackingUp bool","main.Manager.BackupTime int64","main.Manager.BackupVersion string","main.Manager.ConfigValid bool","main.Manager.PropsMu sync.RWMutex","main.Manager.Restoring bool","main.Manager.cfg Config","main.Manager.methods *struct { CanBackup func() `out:\"can\"`; CanRestore func() `out:\"can\"`; StartBackup func(); StartRestore func(); }","main.Manager.service *dbusutil.Service","main.Manager.signals *struct { JobEnd struct { kind string; success bool; errMsg string; }; }"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName","main.jobKindBackup","main.jobKindRestore"]},{"Name":"var:main","Fields":["main.msgRollBack"]}]}
{"Filepath":"t1_test.go","Functions":[{"Uniquefunname":"func TestCharsToString(t *testing.T)","Funname":"TestCharsToString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFindKernelFiles(t *testing.T)","Funname":"TestFindKernelFiles","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetKernelReleaseWithBootOption(t *testing.T)","Funname":"TestGetKernelReleaseWithBootOption","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetPathFromLsblkOutput(t *testing.T)","Funname":"TestGetPathFromLsblkOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsMounted(t *testing.T)","Funname":"TestIsMounted","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseBoardInfo(t *testing.T)","Funname":"TestParseBoardInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseLsbReleaseOutput(t *testing.T)","Funname":"TestParseLsbReleaseOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseOsProberOutput(t *testing.T)","Funname":"TestParseOsProberOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUname(t *testing.T)","Funname":"TestUname","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestWriteExcludeFile(t *testing.T)","Funname":"TestWriteExcludeFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCharsToString(t *testing.T)","Funname":"main.TestCharsToString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFindKernelFiles(t *testing.T)","Funname":"main.TestFindKernelFiles","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetKernelReleaseWithBootOption(t *testing.T)","Funname":"main.TestGetKernelReleaseWithBootOption","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetPathFromLsblkOutput(t *testing.T)","Funname":"main.TestGetPathFromLsblkOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsMounted(t *testing.T)","Funname":"main.TestIsMounted","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseBoardInfo(t *testing.T)","Funname":"main.TestParseBoardInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseLsbReleaseOutput(t *testing.T)","Funname":"main.TestParseLsbReleaseOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseOsProberOutput(t *testing.T)","Funname":"main.TestParseOsProberOutput","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUname(t *testing.T)","Funname":"main.TestUname","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestWriteExcludeFile(t *testing.T)","Funname":"main.TestWriteExcludeFile","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"const:main","Fields":["main.boardInfo1","main.lsbReleaseOutput","main.lsblkUuidPath1","main.mountsInfo"]}]}
{"Filepath":"util.go","Functions":[{"Uniquefunname":"func charsToString(ca []int8) string","Funname":"charsToString","Returntype":"string","Args":"ca []int8"},{"Uniquefunname":"func getBootOptions() (string, error)","Funname":"getBootOptions","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getDeviceByUuid(uuid string) (string, error)","Funname":"getDeviceByUuid","Returntype":"(string, error)","Args":"uuid string"},{"Uniquefunname":"func getDeviceUuid(device string) (string, error)","Funname":"getDeviceUuid","Returntype":"(string, error)","Args":"device string"},{"Uniquefunname":"func getPathFromLsblkOutput(out string, uuid string) string","Funname":"getPathFromLsblkOutput","Returntype":"string","Args":"out string, uuid string"},{"Uniquefunname":"func hasDiskDevice(uuid string) bool","Funname":"hasDiskDevice","Returntype":"bool","Args":"uuid string"},{"Uniquefunname":"func isArchArm() bool","Funname":"isArchArm","Returntype":"bool","Args":""},{"Uniquefunname":"func isArchMips() bool","Funname":"isArchMips","Returntype":"bool","Args":""},{"Uniquefunname":"func isArchSw() bool","Funname":"isArchSw","Returntype":"bool","Args":""},{"Uniquefunname":"func isMounted(mountPoint string) (bool, error)","Funname":"isMounted","Returntype":"(bool, error)","Args":"mountPoint string"},{"Uniquefunname":"func isMountedAux(data []byte, mountPoint string) bool","Funname":"isMountedAux","Returntype":"bool","Args":"data []byte, mountPoint string"},{"Uniquefunname":"func isMountedRo(mountPoint string) (bool, error)","Funname":"isMountedRo","Returntype":"(bool, error)","Args":"mountPoint string"},{"Uniquefunname":"func isMountedRoAux(data []byte, mountPoint string) bool","Funname":"isMountedRoAux","Returntype":"bool","Args":"data []byte, mountPoint string"},{"Uniquefunname":"func logWarningf(format string, args ...interface","Funname":"logWarningf","Returntype":"","Args":"format string, args ...interface{}"},{"Uniquefunname":"func charsToString(ca []int8) string","Funname":"main.charsToString","Returntype":"string","Args":"ca []int8"},{"Uniquefunname":"func getBootOptions() (string, error)","Funname":"main.getBootOptions","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getDeviceByUuid(uuid string) (string, error)","Funname":"main.getDeviceByUuid","Returntype":"(string, error)","Args":"uuid string"},{"Uniquefunname":"func getDeviceUuid(device string) (string, error)","Funname":"main.getDeviceUuid","Returntype":"(string, error)","Args":"device string"},{"Uniquefunname":"func getPathFromLsblkOutput(out string, uuid string) string","Funname":"main.getPathFromLsblkOutput","Returntype":"string","Args":"out string, uuid string"},{"Uniquefunname":"func hasDiskDevice(uuid string) bool","Funname":"main.hasDiskDevice","Returntype":"bool","Args":"uuid string"},{"Uniquefunname":"func isArchArm() bool","Funname":"main.isArchArm","Returntype":"bool","Args":""},{"Uniquefunname":"func isArchMips() bool","Funname":"main.isArchMips","Returntype":"bool","Args":""},{"Uniquefunname":"func isArchSw() bool","Funname":"main.isArchSw","Returntype":"bool","Args":""},{"Uniquefunname":"func isMounted(mountPoint string) (bool, error)","Funname":"main.isMounted","Returntype":"(bool, error)","Args":"mountPoint string"},{"Uniquefunname":"func isMountedAux(data []byte, mountPoint string) bool","Funname":"main.isMountedAux","Returntype":"bool","Args":"data []byte, mountPoint string"},{"Uniquefunname":"func isMountedRo(mountPoint string) (bool, error)","Funname":"main.isMountedRo","Returntype":"(bool, error)","Args":"mountPoint string"},{"Uniquefunname":"func isMountedRoAux(data []byte, mountPoint string) bool","Funname":"main.isMountedRoAux","Returntype":"bool","Args":"data []byte, mountPoint string"},{"Uniquefunname":"func logWarningf(format string, args ...interface","Funname":"main.logWarningf","Returntype":"","Args":"format string, args ...interface{}"},{"Uniquefunname":"func parseBoardInfo(data []byte) *mipsBoardInfo","Funname":"main.parseBoardInfo","Returntype":"*mipsBoardInfo","Args":"data []byte"},{"Uniquefunname":"func parseLsbReleaseOutput(data []byte) map[string]string","Funname":"main.parseLsbReleaseOutput","Returntype":"map[string]string","Args":"data []byte"},{"Uniquefunname":"func parseOsProberOutput(data []byte) []string","Funname":"main.parseOsProberOutput","Returntype":"[]string","Args":"data []byte"},{"Uniquefunname":"func parseOsReleaseOutput(data []byte) map[string]string","Funname":"main.parseOsReleaseOutput","Returntype":"map[string]string","Args":"data []byte"},{"Uniquefunname":"func readBoardInfo() (*mipsBoardInfo, error)","Funname":"main.readBoardInfo","Returntype":"(*mipsBoardInfo, error)","Args":""},{"Uniquefunname":"func runLsbRelease() (map[string]string, error)","Funname":"main.runLsbRelease","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func runOsProber() ([]string, error)","Funname":"main.runOsProber","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func runOsRelease() (map[string]string, error)","Funname":"main.runOsRelease","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func runUpdateGrub(envVars []string) error","Funname":"main.runUpdateGrub","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func setLogEnv(logEnv int)","Funname":"main.setLogEnv","Returntype":"","Args":"logEnv int"},{"Uniquefunname":"func uname() (*utsName, error)","Funname":"main.uname","Returntype":"(*utsName, error)","Args":""},{"Uniquefunname":"func writeExcludeFile(excludeItems []string) (string, error)","Funname":"main.writeExcludeFile","Returntype":"(string, error)","Args":"excludeItems []string"},{"Uniquefunname":"func parseBoardInfo(data []byte) *mipsBoardInfo","Funname":"parseBoardInfo","Returntype":"*mipsBoardInfo","Args":"data []byte"},{"Uniquefunname":"func parseLsbReleaseOutput(data []byte) map[string]string","Funname":"parseLsbReleaseOutput","Returntype":"map[string]string","Args":"data []byte"},{"Uniquefunname":"func parseOsProberOutput(data []byte) []string","Funname":"parseOsProberOutput","Returntype":"[]string","Args":"data []byte"},{"Uniquefunname":"func parseOsReleaseOutput(data []byte) map[string]string","Funname":"parseOsReleaseOutput","Returntype":"map[string]string","Args":"data []byte"},{"Uniquefunname":"func readBoardInfo() (*mipsBoardInfo, error)","Funname":"readBoardInfo","Returntype":"(*mipsBoardInfo, error)","Args":""},{"Uniquefunname":"func runLsbRelease() (map[string]string, error)","Funname":"runLsbRelease","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func runOsProber() ([]string, error)","Funname":"runOsProber","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func runOsRelease() (map[string]string, error)","Funname":"runOsRelease","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func runUpdateGrub(envVars []string) error","Funname":"runUpdateGrub","Returntype":"error","Args":"envVars []string"},{"Uniquefunname":"func setLogEnv(logEnv int)","Funname":"setLogEnv","Returntype":"","Args":"logEnv int"},{"Uniquefunname":"func uname() (*utsName, error)","Funname":"uname","Returntype":"(*utsName, error)","Args":""},{"Uniquefunname":"func writeExcludeFile(excludeItems []string) (string, error)","Funname":"writeExcludeFile","Returntype":"(string, error)","Args":"excludeItems []string"}],"Records":[{"Name":"var:main","Fields":["main._logEnv"]},{"Name":"const:main","Fields":["main.logEnvCommon","main.logEnvGrubMkconfig","main.lsbReleaseKeyCodename","main.lsbReleaseKeyDesc","main.lsbReleaseKeyDistID","main.lsbReleaseKeyRelease","main.osEditionName","main.osEditionNameZHCH","main.osMajorVersion","main.osMinorVersion","main.osOsBuild","main.osProductType","main.osProductTypeZHCH","main.osSystemName","main.osSystemNameZHCN"]},{"Name":"struct:main.mipsBoardInfo","Fields":["main.mipsBoardInfo.biosVersion string"]},{"Name":"struct:main.utsName","Fields":["main.utsName.machine string","main.utsName.release string"]}]}
{"Filepath":"grubcfg/grubcfg.go","Functions":[{"Uniquefunname":"func (cfg *GrubCfg) AddRecoveryMenuEntryMips(menuText, rootUuid, linux, initrd string)","Funname":"AddRecoveryMenuEntryMips","Returntype":"","Args":"menuText, rootUuid, linux, initrd string"},{"Uniquefunname":"func (cfg *GrubCfg) AddRecoveryMenuEntrySw(menuText, rootUuid, linux, initrd string)","Funname":"AddRecoveryMenuEntrySw","Returntype":"","Args":"menuText, rootUuid, linux, initrd string"},{"Uniquefunname":"func (l Line) Length() int","Funname":"Length","Returntype":"int","Args":""},{"Uniquefunname":"func (me *MenuEntry) Length() int","Funname":"Length","Returntype":"int","Args":""},{"Uniquefunname":"func ParseGrubCfgFile(filename string) (*GrubCfg, error)","Funname":"ParseGrubCfgFile","Returntype":"(*GrubCfg, error)","Args":"filename string"},{"Uniquefunname":"func (cfg *GrubCfg) RemoveRecoveryMenuEntries()","Funname":"RemoveRecoveryMenuEntries","Returntype":"","Args":""},{"Uniquefunname":"func (cfg *GrubCfg) ReplaceRootUuid(uuid string) error","Funname":"ReplaceRootUuid","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func (cfg *GrubCfg) Save(filename string) error","Funname":"Save","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (l Line) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (me *MenuEntry) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (cfg *GrubCfg) AddRecoveryMenuEntryMips(menuText, rootUuid, linux, initrd string)","Funname":"grubcfg.GrubCfg.AddRecoveryMenuEntryMips","Returntype":"","Args":"menuText, rootUuid, linux, initrd string"},{"Uniquefunname":"func (cfg *GrubCfg) AddRecoveryMenuEntrySw(menuText, rootUuid, linux, initrd string)","Funname":"grubcfg.GrubCfg.AddRecoveryMenuEntrySw","Returntype":"","Args":"menuText, rootUuid, linux, initrd string"},{"Uniquefunname":"func (cfg *GrubCfg) RemoveRecoveryMenuEntries()","Funname":"grubcfg.GrubCfg.RemoveRecoveryMenuEntries","Returntype":"","Args":""},{"Uniquefunname":"func (cfg *GrubCfg) ReplaceRootUuid(uuid string) error","Funname":"grubcfg.GrubCfg.ReplaceRootUuid","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func (cfg *GrubCfg) Save(filename string) error","Funname":"grubcfg.GrubCfg.Save","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (cfg *GrubCfg) toBytes() []byte","Funname":"grubcfg.GrubCfg.toBytes","Returntype":"[]byte","Args":""},{"Uniquefunname":"func (l Line) Length() int","Funname":"grubcfg.Line.Length","Returntype":"int","Args":""},{"Uniquefunname":"func (l Line) String() string","Funname":"grubcfg.Line.String","Returntype":"string","Args":""},{"Uniquefunname":"func (me *MenuEntry) Length() int","Funname":"grubcfg.MenuEntry.Length","Returntype":"int","Args":""},{"Uniquefunname":"func (me *MenuEntry) String() string","Funname":"grubcfg.MenuEntry.String","Returntype":"string","Args":""},{"Uniquefunname":"func ParseGrubCfgFile(filename string) (*GrubCfg, error)","Funname":"grubcfg.ParseGrubCfgFile","Returntype":"(*GrubCfg, error)","Args":"filename string"},{"Uniquefunname":"func (cfg *GrubCfg) toBytes() []byte","Funname":"toBytes","Returntype":"[]byte","Args":""}],"Records":[{"Name":"struct:grubcfg.GrubCfg","Fields":["grubcfg.GrubCfg.items []GrubCfgItem"]},{"Name":"interface","Fields":["grubcfg.GrubCfgItem"]},{"Name":"struct:grubcfg.Line","Fields":["grubcfg.Line.value string"]},{"Name":"struct:grubcfg.MenuEntry","Fields":["grubcfg.MenuEntry.head string","grubcfg.MenuEntry.items []string"]},{"Name":"var:grubcfg","Fields":["grubcfg.regRootUUID"]}]}
